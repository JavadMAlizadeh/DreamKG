2025-07-24 15:07:53,835 - INFO - QueryProcessor initialized successfully.
2025-07-24 15:08:00,068 - INFO - 

 ========= New Query Received: 'Where can I find free Wi-Fi in zipcode 19121?' =========

2025-07-24 15:08:00,069 - INFO - STEP 1: 

 Analyzing user query with dispatcher LLM.
2025-07-24 15:08:00,069 - INFO -   - INPUT (user_query): 'Where can I find free Wi-Fi in zipcode 19121?'
2025-07-24 15:08:00,498 - INFO -   - OUTPUT (raw_llm_response): {
   "time_keywords":"",
   "service_keywords":"free Wi-Fi",
   "location_keywords":"zipcode 19121"
}
2025-07-24 15:08:00,498 - INFO -   - OUTPUT (parsed_json): {'time_keywords': '', 'service_keywords': 'free Wi-Fi', 'location_keywords': 'zipcode 19121'}
2025-07-24 15:08:00,499 - INFO - STEP 2: Calling Location Intelligence.
2025-07-24 15:08:00,499 - INFO -   - INPUT: 'zipcode 19121'
2025-07-24 15:08:00,758 - INFO -   - OUTPUT (matched_addresses): ['19103', '19121', '19123', '19130']
2025-07-24 15:08:00,759 - INFO - STEP 3: 

 Calling Service Intelligence.
2025-07-24 15:08:00,759 - INFO -   - INPUT: 'free Wi-Fi'
2025-07-24 15:08:01,170 - INFO -   - OUTPUT (service_results): ['computer', 'computers', 'free', 'public', 'wi-fi']
2025-07-24 15:08:01,170 - INFO - STEP 4: 

 Generating final Cypher Query from template.
2025-07-24 15:08:01,170 - INFO -   - OUTPUT (Generated Cypher Query):

MATCH (org:Organization)

// To use a filter, remove the '//' from the start of the line and edit the value.
WHERE 1=1 // This dummy condition lets you safely uncomment any AND line below.

  // -- Filters on Organization Properties --
  // AND toLower(TRIM(replace(org.name, '\u00A0', ' '))) CONTAINS toLower('YOUR_NAME_HERE')
  // AND toLower(TRIM(replace(org.phone, '\u00A0', ' '))) CONTAINS toLower('YOUR_PHONE_HERE')
  // AND toLower(TRIM(replace(org.status, '\u00A0', ' '))) CONTAINS toLower('YOUR_STATUS_HERE')

  // -- Filters on Location Properties --
  AND EXISTS{(org)-[:HAS_LOCATION]->(l:Location WHERE l.zipCode CONTAINS '19103' OR l.zipCode CONTAINS '19121')}

  // -- Filters on Service Properties --
  AND EXISTS{(org)-[:PROVIDES]->(s:Service WHERE toLower(TRIM(s.name)) CONTAINS toLower('public') OR toLower(TRIM(s.name)) CONTAINS toLower('computers') OR toLower(TRIM(s.name)) CONTAINS toLower('free wi-fi') OR toLower(TRIM(s.name)) CONTAINS toLower('computer') OR toLower(TRIM(s.name)) CONTAINS toLower('wi-fi'))}
  AND EXISTS{(org)-[:PROVIDES]->(s:Service WHERE toLower(TRIM(s.type)) CONTAINS toLower('Free'))}

  // -- Filters on Time Properties --
  // AND EXISTS{(org)-[:HAS_HOURS]->(t:Time WHERE toLower(TRIM(t.day)) CONTAINS toLower('YOUR_TIME_DAY_HERE'))}
  // AND EXISTS{(org)-[:HAS_HOURS]->(t:Time WHERE toLower(TRIM(t.hours)) CONTAINS toLower('YOUR_TIME_HOURS_HERE'))}

// The RETURN clause remains the same to prevent data repetition.
RETURN org,
       [(org)-[:HAS_LOCATION]->(loc) | loc] AS locations,
       [(org)-[:PROVIDES]->(svc) | svc] AS services,
       [(org)-[:HAS_HOURS]->(tm) | tm] AS operatingHours

2025-07-24 15:08:23,836 - INFO - 

 ========= New Query Received: 'Where can I find free Wi-Fi around Cecil B Moore?' =========

2025-07-24 15:08:23,836 - INFO - STEP 1: 

 Analyzing user query with dispatcher LLM.
2025-07-24 15:08:23,836 - INFO -   - INPUT (user_query): 'Where can I find free Wi-Fi around Cecil B Moore?'
2025-07-24 15:08:24,171 - INFO -   - OUTPUT (raw_llm_response): {
   "time_keywords":"",
   "service_keywords":"free Wi-Fi",
   "location_keywords":"Cecil B Moore"
}
2025-07-24 15:08:24,171 - INFO -   - OUTPUT (parsed_json): {'time_keywords': '', 'service_keywords': 'free Wi-Fi', 'location_keywords': 'Cecil B Moore'}
2025-07-24 15:08:24,171 - INFO - STEP 2: Calling Location Intelligence.
2025-07-24 15:08:24,171 - INFO -   - INPUT: 'Cecil B Moore'
2025-07-24 15:08:24,489 - INFO -   - OUTPUT (matched_addresses): ['19121', '19123', '19130', '19132', '19133']
2025-07-24 15:08:24,489 - INFO - STEP 3: 

 Calling Service Intelligence.
2025-07-24 15:08:24,489 - INFO -   - INPUT: 'free Wi-Fi'
2025-07-24 15:08:24,997 - INFO -   - OUTPUT (service_results): ['computer', 'computers', 'free', 'public', 'wi-fi']
2025-07-24 15:08:24,997 - INFO - STEP 4: 

 Generating final Cypher Query from template.
2025-07-24 15:08:24,997 - INFO -   - OUTPUT (Generated Cypher Query):

MATCH (org:Organization)

// To use a filter, remove the '//' from the start of the line and edit the value.
WHERE 1=1 // This dummy condition lets you safely uncomment any AND line below.

  // -- Filters on Organization Properties --
  // AND toLower(TRIM(replace(org.name, '\u00A0', ' '))) CONTAINS toLower('YOUR_NAME_HERE')
  // AND toLower(TRIM(replace(org.phone, '\u00A0', ' '))) CONTAINS toLower('YOUR_PHONE_HERE')
  // AND toLower(TRIM(replace(org.status, '\u00A0', ' '))) CONTAINS toLower('YOUR_STATUS_HERE')

  // -- Filters on Location Properties --
  AND EXISTS{(org)-[:HAS_LOCATION]->(l:Location WHERE l.zipCode CONTAINS '19121' OR l.zipCode CONTAINS '19123')}

  // -- Filters on Service Properties --
  AND EXISTS{(org)-[:PROVIDES]->(s:Service WHERE toLower(TRIM(s.name)) CONTAINS toLower('public') OR toLower(TRIM(s.name)) CONTAINS toLower('computers') OR toLower(TRIM(s.name)) CONTAINS toLower('free wi-fi') OR toLower(TRIM(s.name)) CONTAINS toLower('computer') OR toLower(TRIM(s.name)) CONTAINS toLower('wi-fi'))}
  AND EXISTS{(org)-[:PROVIDES]->(s:Service WHERE toLower(TRIM(s.type)) CONTAINS toLower('Free'))}

  // -- Filters on Time Properties --
  // AND EXISTS{(org)-[:HAS_HOURS]->(t:Time WHERE toLower(TRIM(t.day)) CONTAINS toLower('YOUR_TIME_DAY_HERE'))}
  // AND EXISTS{(org)-[:HAS_HOURS]->(t:Time WHERE toLower(TRIM(t.hours)) CONTAINS toLower('YOUR_TIME_HOURS_HERE'))}

// The RETURN clause remains the same to prevent data repetition.
RETURN org,
       [(org)-[:HAS_LOCATION]->(loc) | loc] AS locations,
       [(org)-[:PROVIDES]->(svc) | svc] AS services,
       [(org)-[:HAS_HOURS]->(tm) | tm] AS operatingHours

2025-07-24 15:08:45,657 - INFO - 

 ========= New Query Received: 'Libraries around City Hall' =========

2025-07-24 15:08:45,657 - INFO - STEP 1: 

 Analyzing user query with dispatcher LLM.
2025-07-24 15:08:45,657 - INFO -   - INPUT (user_query): 'Libraries around City Hall'
2025-07-24 15:08:45,972 - INFO -   - OUTPUT (raw_llm_response): {
   "time_keywords":"",
   "service_keywords":"",
   "location_keywords":"City Hall"
}
2025-07-24 15:08:45,972 - INFO -   - OUTPUT (parsed_json): {'time_keywords': '', 'service_keywords': '', 'location_keywords': 'City Hall'}
2025-07-24 15:08:45,973 - INFO - STEP 2: Calling Location Intelligence.
2025-07-24 15:08:45,973 - INFO -   - INPUT: 'City Hall'
2025-07-24 15:08:46,277 - INFO -   - OUTPUT (matched_addresses): ['19103', '19106', '19123', '19130']
2025-07-24 15:08:46,278 - INFO - STEP 3: 

 Generating final Cypher Query from template.
2025-07-24 15:08:46,279 - INFO -   - OUTPUT (Generated Cypher Query):

MATCH (org:Organization)

// To use a filter, remove the '//' from the start of the line and edit the value.
WHERE 1=1 // This dummy condition lets you safely uncomment any AND line below.

  // -- Filters on Organization Properties --
  // AND toLower(TRIM(replace(org.name, '\u00A0', ' '))) CONTAINS toLower('YOUR_NAME_HERE')
  // AND toLower(TRIM(replace(org.phone, '\u00A0', ' '))) CONTAINS toLower('YOUR_PHONE_HERE')
  // AND toLower(TRIM(replace(org.status, '\u00A0', ' '))) CONTAINS toLower('YOUR_STATUS_HERE')

  // -- Filters on Location Properties --
  AND EXISTS{(org)-[:HAS_LOCATION]->(l:Location WHERE l.zipCode CONTAINS '19103' OR l.zipCode CONTAINS '19106')}

  // -- Filters on Service Properties --
  // AND EXISTS{(org)-[:PROVIDES]->(s:Service WHERE toLower(TRIM(s.name)) CONTAINS toLower('YOUR_SERVICE_NAME_HERE'))}
  // AND EXISTS{(org)-[:PROVIDES]->(s:Service WHERE toLower(TRIM(s.type)) CONTAINS toLower('YOUR_SERVICE_TYPE_HERE'))}

  // -- Filters on Time Properties --
  // AND EXISTS{(org)-[:HAS_HOURS]->(t:Time WHERE toLower(TRIM(t.day)) CONTAINS toLower('YOUR_TIME_DAY_HERE'))}
  // AND EXISTS{(org)-[:HAS_HOURS]->(t:Time WHERE toLower(TRIM(t.hours)) CONTAINS toLower('YOUR_TIME_HOURS_HERE'))}

// The RETURN clause remains the same to prevent data repetition.
RETURN org,
       [(org)-[:HAS_LOCATION]->(loc) | loc] AS locations,
       [(org)-[:PROVIDES]->(svc) | svc] AS services,
       [(org)-[:HAS_HOURS]->(tm) | tm] AS operatingHours

2025-07-24 15:09:55,761 - INFO - 

 ========= New Query Received: 'A library which is open on Sunday' =========

2025-07-24 15:09:55,761 - INFO - STEP 1: 

 Analyzing user query with dispatcher LLM.
2025-07-24 15:09:55,762 - INFO -   - INPUT (user_query): 'A library which is open on Sunday'
2025-07-24 15:09:56,239 - INFO -   - OUTPUT (raw_llm_response): {
   "time_keywords": "Sunday",
   "service_keywords": "",
   "location_keywords": ""
}
2025-07-24 15:09:56,239 - INFO -   - OUTPUT (parsed_json): {'time_keywords': 'Sunday', 'service_keywords': '', 'location_keywords': ''}
2025-07-24 15:09:56,239 - INFO - STEP 2: Calling Time Intelligence.
2025-07-24 15:09:56,240 - INFO -   - INPUT: 'Sunday'
2025-07-24 15:09:56,648 - INFO -   - OUTPUT: ['Sunday']
2025-07-24 15:09:56,648 - INFO - STEP 3: 

 Generating final Cypher Query from template.
2025-07-24 15:09:56,648 - INFO -   - OUTPUT (Generated Cypher Query):

MATCH (org:Organization)

// To use a filter, remove the '//' from the start of the line and edit the value.
WHERE 1=1 // This dummy condition lets you safely uncomment any AND line below.

  // -- Filters on Organization Properties --
  // AND toLower(TRIM(replace(org.name, '\u00A0', ' '))) CONTAINS toLower('YOUR_NAME_HERE')
  // AND toLower(TRIM(replace(org.phone, '\u00A0', ' '))) CONTAINS toLower('YOUR_PHONE_HERE')
  // AND toLower(TRIM(replace(org.status, '\u00A0', ' '))) CONTAINS toLower('YOUR_STATUS_HERE')

  // -- Filters on Location Properties --
  // AND EXISTS{(org)-[:HAS_LOCATION]->(l:Location WHERE YOUR_LOCATION_CONDITION_HERE)}

  // -- Filters on Service Properties --
  // AND EXISTS{(org)-[:PROVIDES]->(s:Service WHERE toLower(TRIM(s.name)) CONTAINS toLower('YOUR_SERVICE_NAME_HERE'))}
  // AND EXISTS{(org)-[:PROVIDES]->(s:Service WHERE toLower(TRIM(s.type)) CONTAINS toLower('YOUR_SERVICE_TYPE_HERE'))}

  // -- Filters on Time Properties --
  AND EXISTS{(org)-[:HAS_HOURS]->(t:Time WHERE toLower(TRIM(t.day)) CONTAINS toLower('Sunday'))}
  // AND EXISTS{(org)-[:HAS_HOURS]->(t:Time WHERE toLower(TRIM(t.hours)) CONTAINS toLower('YOUR_TIME_HOURS_HERE'))}

// The RETURN clause remains the same to prevent data repetition.
RETURN org,
       [(org)-[:HAS_LOCATION]->(loc) | loc] AS locations,
       [(org)-[:PROVIDES]->(svc) | svc] AS services,
       [(org)-[:HAS_HOURS]->(tm) | tm] AS operatingHours

2025-07-24 15:10:53,630 - INFO - 

 ========= New Query Received: 'A library that is open around 8pm' =========

2025-07-24 15:10:53,630 - INFO - STEP 1: 

 Analyzing user query with dispatcher LLM.
2025-07-24 15:10:53,630 - INFO -   - INPUT (user_query): 'A library that is open around 8pm'
2025-07-24 15:10:53,998 - INFO -   - OUTPUT (raw_llm_response): {
   "time_keywords": "around 8pm",
   "service_keywords": "library",
   "location_keywords": ""
}
2025-07-24 15:10:53,998 - INFO -   - OUTPUT (parsed_json): {'time_keywords': 'around 8pm', 'service_keywords': 'library', 'location_keywords': ''}
2025-07-24 15:10:53,998 - INFO - STEP 2: Calling Time Intelligence.
2025-07-24 15:10:53,999 - INFO -   - INPUT: 'around 8pm'
2025-07-24 15:10:54,331 - INFO -   - OUTPUT: ['9:00 AM - 8:00 PM']
2025-07-24 15:10:54,331 - INFO - STEP 3: 

 Calling Service Intelligence.
2025-07-24 15:10:54,331 - INFO -   - INPUT: 'library'
2025-07-24 15:10:55,054 - INFO -   - OUTPUT (service_results): ['collection', 'collections', 'community', 'computer', 'computers', 'copy', 'copying', 'events', 'exhibitions', 'free', 'library', 'print', 'printing', 'programs', 'public', 'research', 'rooms', 'scanners', 'scanning', 'services', 'spaces', 'study', 'wi-fi']
2025-07-24 15:10:55,054 - INFO - STEP 4: 

 Generating final Cypher Query from template.
2025-07-24 15:10:55,054 - INFO -   - OUTPUT (Generated Cypher Query):

MATCH (org:Organization)

// To use a filter, remove the '//' from the start of the line and edit the value.
WHERE 1=1 // This dummy condition lets you safely uncomment any AND line below.

  // -- Filters on Organization Properties --
  // AND toLower(TRIM(replace(org.name, '\u00A0', ' '))) CONTAINS toLower('YOUR_NAME_HERE')
  // AND toLower(TRIM(replace(org.phone, '\u00A0', ' '))) CONTAINS toLower('YOUR_PHONE_HERE')
  // AND toLower(TRIM(replace(org.status, '\u00A0', ' '))) CONTAINS toLower('YOUR_STATUS_HERE')

  // -- Filters on Location Properties --
  // AND EXISTS{(org)-[:HAS_LOCATION]->(l:Location WHERE YOUR_LOCATION_CONDITION_HERE)}

  // -- Filters on Service Properties --
  // AND EXISTS{(org)-[:PROVIDES]->(s:Service WHERE toLower(TRIM(s.name)) CONTAINS toLower('YOUR_SERVICE_NAME_HERE'))}
  // AND EXISTS{(org)-[:PROVIDES]->(s:Service WHERE toLower(TRIM(s.type)) CONTAINS toLower('YOUR_SERVICE_TYPE_HERE'))}

  // -- Filters on Time Properties --
  // AND EXISTS{(org)-[:HAS_HOURS]->(t:Time WHERE toLower(TRIM(t.day)) CONTAINS toLower('YOUR_TIME_DAY_HERE'))}
  AND EXISTS{(org)-[:HAS_HOURS]->(t:Time WHERE toLower(TRIM(t.hours)) CONTAINS toLower('9:00 AM - 8:00 PM'))}

// The RETURN clause remains the same to prevent data repetition.
RETURN org,
       [(org)-[:HAS_LOCATION]->(loc) | loc] AS locations,
       [(org)-[:PROVIDES]->(svc) | svc] AS services,
       [(org)-[:HAS_HOURS]->(tm) | tm] AS operatingHours

2025-07-24 15:11:18,622 - INFO - 

 ========= New Query Received: 'A library which is open around 9 in the morning' =========

2025-07-24 15:11:18,622 - INFO - STEP 1: 

 Analyzing user query with dispatcher LLM.
2025-07-24 15:11:18,622 - INFO -   - INPUT (user_query): 'A library which is open around 9 in the morning'
2025-07-24 15:11:19,082 - INFO -   - OUTPUT (raw_llm_response): {
   "time_keywords": "around 9 in the morning",
   "service_keywords": "library",
   "location_keywords": ""
}
2025-07-24 15:11:19,083 - INFO -   - OUTPUT (parsed_json): {'time_keywords': 'around 9 in the morning', 'service_keywords': 'library', 'location_keywords': ''}
2025-07-24 15:11:19,083 - INFO - STEP 2: Calling Time Intelligence.
2025-07-24 15:11:19,083 - INFO -   - INPUT: 'around 9 in the morning'
2025-07-24 15:11:19,449 - INFO -   - OUTPUT: ['9:00 AM - 5:00 PM', '9:00 AM - 8:00 PM']
2025-07-24 15:11:19,450 - INFO - STEP 3: 

 Calling Service Intelligence.
2025-07-24 15:11:19,450 - INFO -   - INPUT: 'library'
2025-07-24 15:11:20,208 - INFO -   - OUTPUT (service_results): ['collection', 'collections', 'community', 'computer', 'computers', 'copy', 'copying', 'events', 'exhibitions', 'free', 'library', 'print', 'printing', 'programs', 'public', 'research', 'rooms', 'scanners', 'scanning', 'services', 'spaces', 'study', 'wi-fi']
2025-07-24 15:11:20,208 - INFO - STEP 4: 

 Generating final Cypher Query from template.
2025-07-24 15:11:20,209 - INFO -   - OUTPUT (Generated Cypher Query):

MATCH (org:Organization)

// To use a filter, remove the '//' from the start of the line and edit the value.
WHERE 1=1 // This dummy condition lets you safely uncomment any AND line below.

  // -- Filters on Organization Properties --
  // AND toLower(TRIM(replace(org.name, '\u00A0', ' '))) CONTAINS toLower('YOUR_NAME_HERE')
  // AND toLower(TRIM(replace(org.phone, '\u00A0', ' '))) CONTAINS toLower('YOUR_PHONE_HERE')
  // AND toLower(TRIM(replace(org.status, '\u00A0', ' '))) CONTAINS toLower('YOUR_STATUS_HERE')

  // -- Filters on Location Properties --
  // AND EXISTS{(org)-[:HAS_LOCATION]->(l:Location WHERE YOUR_LOCATION_CONDITION_HERE)}

  // -- Filters on Service Properties --
  // AND EXISTS{(org)-[:PROVIDES]->(s:Service WHERE toLower(TRIM(s.name)) CONTAINS toLower('YOUR_SERVICE_NAME_HERE'))}
  // AND EXISTS{(org)-[:PROVIDES]->(s:Service WHERE toLower(TRIM(s.type)) CONTAINS toLower('YOUR_SERVICE_TYPE_HERE'))}

  // -- Filters on Time Properties --
  // AND EXISTS{(org)-[:HAS_HOURS]->(t:Time WHERE toLower(TRIM(t.day)) CONTAINS toLower('YOUR_TIME_DAY_HERE'))}
  AND EXISTS{(org)-[:HAS_HOURS]->(t:Time WHERE toLower(TRIM(t.hours)) CONTAINS toLower('9:00 AM - 5:00 PM') OR toLower(TRIM(t.hours)) CONTAINS toLower('9:00 AM - 8:00 PM'))}

// The RETURN clause remains the same to prevent data repetition.
RETURN org,
       [(org)-[:HAS_LOCATION]->(loc) | loc] AS locations,
       [(org)-[:PROVIDES]->(svc) | svc] AS services,
       [(org)-[:HAS_HOURS]->(tm) | tm] AS operatingHours

